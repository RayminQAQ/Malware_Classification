#!/usr/bin/env python
# coding: utf-8

# In[104]:


import sys
import os
from math import log
import numpy as np
import scipy as sp
from PIL import Image
import matplotlib.pyplot as plt
import json
import pandas as pd

pe_data_path = "MOTIF_defanged"
bytes_data_path = "bytes_data_HW"
img_data_path = "image_data_HW"
json_path = "motif_dataset.jsonl"
json_file = pd.read_json(path_or_buf=json_path, lines=True)
json_file["md5"]


# In[106]:


def pe2hex(file_path, output_file_path):
    print('Processing '+file_path)
    file = bytearray(open(file_path, 'rb').read())
    key = "\0"
    with open(output_file_path, 'w') as output:
        for count, byte in enumerate(file, 1):
            output.write(f'{byte ^ ord(key[(count - 1) % len(key)]):#0{4}x}' + ('\n' if not count % 16 else ' '))
    print('done')
          
def hex2img(array, output_img_path):
    if array.shape[1]!=16: #If not hexadecimal
        assert(False)
    b=int((array.shape[0]*16)**(0.5))
    b=2**(int(log(b)/log(2))+1)
    a=int(array.shape[0]*16/b)
    print(a,b,array.shape)
    array=array[:a*b//16,:]
    array=np.reshape(array,(a,b))
    im = Image.fromarray(np.uint8(array))
    #out = im.transpose(Image.FLIP_LEFT_RIGHT )
    im.save(output_img_path, "PNG")
    return im


# In[107]:


"""
    files= os.listdir(pe_data_path)

    for counter, name in enumerate(files):
    name_output = name.split(".")[0]
    print(name_output)
    pe2hex(os.path.join(pe_data_path,name), os.path.join(bytes_data_path,name_output+".bytes"))
"""

files= os.listdir(bytes_data_path)
for counter, name in enumerate(files):
        name_output = name.split(".")[0]
        md5 = name_output.split("_")[1]
       
        a = 0
        
        for line in json_file["md5"]:
            if(line == md5):
                label = str(json_file["label"][a])
                print("label: ",json_file["label"][a])
            a+=1
        
            #print(line)
        
        output_image_path = os.path.join(img_data_path,label,name_output+".png")
        if not os.path.exists(os.path.join(img_data_path,label)):
            os.makedirs(os.path.join(img_data_path,label))
        
        
        print('Processing '+output_image_path)

        f=open(os.path.join(bytes_data_path,name), 'r')
        
        array=[]
        for line in f:
            xx=line.replace("\n", "").split(" ")

            if(len(xx) != 16 or "" in xx):
                continue
            
            array.append([int(i,16) if i!='??' else 0 for i in xx])

        img = hex2img(np.array(array),output_image_path)
        del array

        f.close()